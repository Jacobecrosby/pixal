# =====================================
#  ██████╗ ██╗██╗  ██╗ █████╗ ██╗     
#  ██╔══██╗██║╚██╗██╔╝██╔══██╗██║     
#  ██████╔╝██║ ╚███╔╝ ███████║██║     
#  ██╔═══╝ ██║ ██╔██╗ ██╔══██║██║     
#  ██║     ██║██╔╝ ██╗██║  ██║███████╗
#  ╚═╝     ╚═╝╚═╝  ╚═╝╚═╝  ╚═╝╚══════╝
#   PIXAL – PIXel-based Anomaly Locator
# =====================================

###
##
#
##
###
########## ----> Preprocessing <---- ###########
# Thread count for CPU usage
remove_background: 
  max_workers: 8                                  # Number of CPU threads to use for preprocessing

# Settings for image alignment
alignment:
  knn_ratio: 0.8                                 # Ratio for KNN matching. Lower for more strict matching
  number_of_points: 5                            # Number of points to match between images
  ransac_threshold: 7.0                           # RANSAC threshold for outlier removal (removes points that are too far)
  MIN_SCORE_THRESHOLD: 0.5
  MAX_MSE_THRESHOLD: 10.0
  MIN_GOOD_MATCHES: 20

save_metrics: True                                # Save alignment metrics
save_overlays: True                              # Save overlays of aligned images
draw_matches: True                             # Draw matches between images and save them to disk

# Settings for preprocessing images to .npz format for ML input
preprocessor:
  file_name: "out.npz"
  pool_size: 4                                   # Pooling size for image pixels (e.g. 2x2 pooling) 
  channels: ["H","S","V"]                        # Pixel data channels to save for ML input (Can be ruduced, e.g. ["R", "G", "B"]) ["R", "G", "B","H","S","V"]

rename_images: True                              # Rename images to folder name (R0_Triplet_Data_Flex_F1_F_Pink_bg/image.png -> R0_Triplet_Data_Flex_F1_F_Pink_bg/R0_Triplet_Data_Flex_F1_F_Pink_bg.png)


########### ----> Memory Handling, Inputs and Hyperparameters<----####

#### ----> Memory <---- ####
enable_memory_growth: False
TF_GPU_ALLOCATOR: False
mixed_precision: False

#### ----> CPU <---- ####
Available_CPU: 24
CPU_MULTI_THREADING: False
HYBRID_MODE: False  # utilize both CPU and GPU

########## ----> Model <---- ###########
model_name: "testModel" 
model_file_extension: "keras" # h5, or keras # need to add SavedModel format
seed: 101

#### ----> Architecture <---- ####

one_hot_encoding: False # Use one-hot encoding to train a model using all types of images. If False, a different model will be trained for each type of image. Currently underperforms separate models.
autoencoder_architecture: [1200,800,400,200] # Last index is latent layer. Gets mirrored in code
label_latent_size: 200 # Size of the latent layer for the label. This gets added to the latent layer of the autoencoder

########## ----> Training <---- ##########
use_gradient_tape: False # Gradient tape is used for full control of training cycle. Such as custom loss functions, custom optimization, etc. (reinforcement learning, adversarial learning)

### ----> NN Hyperparameters <---- ###
n_epochs: 500
batchsize: 4

learning_rate: 1e-5
regularization: 'l2' # 'l2' or 'l1' 
l1_regularization: 0.0001 # Encourages zero weights. Helps feature selection. Smaller values: ex. 1e-4 Apply lighter regularization, allowing weights to grow larger without as much penalty.
l2_regularization: 0.0001 # Discourages zero weights. General stability. Smaller values: ex. 1e-4 Apply lighter regularization, allowing weights to grow larger without as much penalty.
loss_function: "masked_mse" # "mse", 'mae'
metric_accuracy: "SparseCategoricalAccuracy" #CategoricalAccuracy <--- May need this when implementing image sets
output_activation: "sigmoid" # sigmoid, softmax, tanh, relu, linear

### ----> STOP LOSS <---- ###
patience: 20
min_delta: 0.001

#
##
###
####
##### ----> PLOTTING <----#####

plotting:
  plot_loss: True
  plot_accuracy: True
  plot_confusion_matrix: False
  plot_roc_recall_curve: True
  plot_anomaly_heatmap: True
  plot_abs_loss_per_pixel: True
  plot_mse_per_pixel: True
  plot_pixel_predictions: True
  plot_distributions: True

use_log_loss: False  # Use log loss for plotting
loss_cut: 0.7  # Cut off for loss plotting